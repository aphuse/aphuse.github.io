<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on aphuse blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://aphuse.github.io/</link>
    <language>zh-cn</language>
    <author>aphuse</author>
    
    <updated>Wed, 30 Dec 2015 14:59:54 &#43;0800</updated>
    
    <item>
      <title>如何调整LVM相关PV、VG和LV大小</title>
      <link>http://aphuse.github.io/post/howtoresizelvm/</link>
      <pubDate>Wed, 30 Dec 2015 14:59:54 &#43;0800</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/howtoresizelvm/</guid>
      <description>

&lt;p&gt;之前介绍了使用LVM管理磁盘基本用法，并且我们建议使用多少空间就分配多少空间，空间不够之后我们再扩大空间。那LVM是如何调整空间的呢？下面我们就来介绍如何调整LVM的PV、VG和LV的大小。&lt;/p&gt;

&lt;h3 id=&#34;物理卷-pv:a16989d0c84f2c76d242a15a66572b80&#34;&gt;物理卷(PV)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;扩增&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;增大分区/dev/sda2的容量之后，需要执行以下命令扩展物理卷的大小。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvresize /dev/sda2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令将自动探测设备的当前大小并将物理卷扩展到其最大容量。该命令可以在卷在线运行。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;缩小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在减小某个物理卷所在设备大小之前，需要通过指定&amp;ndash;setphysicalvolumesize size参数缩小物理卷大小。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvresize --setphysicalvolumesize 40G /dev/sda2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该命令可能会提示该物理卷已分配物理区域超过了命令指定的新大小界限，pvresize命令会拒绝将物理卷缩小。若磁盘空间足够大，可以通过pvmove命令将物理区域重新分配至别的卷组来解决这个问题。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;移动物理区域&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用pvdisplay命令查看物理分段的分布情况，具体命令参数如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvdisplay -v -m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;减小物理卷大小，一般必须把所有的已用分段移到前部。假如/dev/sda2的可用空间在第0至第153600分段共153601个可用区域，我们可以从最后的分段中移动相同数目的物理区域来填补这段空间。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvmove --alloc anywhere /dev/sda2:307201-399668 /dev/sda2:0-92466
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数&amp;ndash;alloc anywhere可以用于在同一个分区中移动物理区域的。若要在不同分区中移动，命令形式应该是 pvmove /dev/sda2:1000-1999 /dev/sdb1:0-999 。当操作的数据较多时，移动操作将持续很久（一到两个小时）。最好在Tmux或GNU Screen会话中执行此过程。 &lt;strong&gt;任何形式的意外中断都可能导致致命错误&lt;/strong&gt; 。当操作完成后，可运行fsck保证文件系统完整性。&lt;/p&gt;

&lt;p&gt;当所有空闲分段都移动到最后的物理区域时，运行vgdisplay查看。之后可以再次运行命令调整物理卷的大小。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvresize --setphysicalvolumesize size PhysicalVolume
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;调整分区大小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，你可以用你喜欢的分区工具来缩小该分区了。&lt;/p&gt;

&lt;h3 id=&#34;卷组-vg:a16989d0c84f2c76d242a15a66572b80&#34;&gt;卷组(VG)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;扩增&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;添加物理卷到卷组中，先创建一个新的物理卷，然后再把卷组扩充到该物理卷上&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvcreate /dev/sdb1
vgextend datavg /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;缩小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从卷组中移除分区。首先要把分区中的所有数据移到别的分区上，可以使用下面这个简单的命令实现：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvmove /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样你也可以指定所要转移的目标分区，把目标分区作为pvmove的第二个参数使用就可以了：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvmove /dev/sdb1 /dev/sda2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，可以从卷组中移除物理卷：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vgreduce datavg /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者把所有空的物理卷全部移除：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vgreduce --all datavg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后如果想要使用该分区，而且不想让LVM以为它是一个物理卷，那么你可以执行以下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvremove /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;逻辑卷-lv:a16989d0c84f2c76d242a15a66572b80&#34;&gt;逻辑卷(LV)&lt;/h3&gt;

&lt;p&gt;使用lvresize增加或缩小容量，注意：&lt;strong&gt;虽然即便是对根分区，增加文件系统大小一般都可以在线完成（即文件系统已经被挂载），缩小其大小往往要求首先卸载文件系统以避免数据丢失。请首先确定你的文件系统支持相关操作。&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;扩增&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;向卷组datavg中的逻辑卷datalv增加2G空间，但不修改其文件系统大小，执行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvresize -L +2G datavg/datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置datavg/datalv为15G并同时更改其文件系统大小(注意: &lt;strong&gt;仅支持ext2, ext3, ext4, ReiserFS and XFS file systems。如果使用不同文件系统请使用合适的组件。&lt;/strong&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvresize -L 15G -r datavg/datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果想将卷组所有剩下的可用空间都加入一个逻辑卷中，可以执行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvresize -l +100%FREE datavg/datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;缩小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从逻辑卷datavg/datalv中减少500MB空间，但不修改其文件系统大小（需要确保文件系统已经缩小过）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvresize -L -500M datavg/datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;调整文件系统大小&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果上面执行lv{resize,extend,reduce}时没有使用-r, &amp;ndash;resizefs选项， 或文件系统不支持fsadm(8)（如Btrfs, ZFS等），则需要在缩小逻辑卷之前或扩增逻辑卷后手动调整文件系统大小。注意：&lt;strong&gt;并非所有的文件系统都支持无损或/且在线调整大小。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对于ext2/ext3/ext4文件系统使用下列命令&lt;/p&gt;

&lt;p&gt;将文件系统大小扩展到逻辑卷支持的最大容量：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;resize2fs datavg/datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将文件系统减小到其所需的最小容量，也可以指定具体的尺寸：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;resize2fs -M datavg/datalv
resize2fs datavg/datalv NewSize
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;移除逻辑卷&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;警告: &lt;strong&gt;在移除逻辑卷之前，请先备份好数据以免丢失！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;首先要找到你所要移除的逻辑卷的名称及其挂载点。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvs
lsblk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果要移除的逻辑卷有挂载点，那要先卸载挂载点&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;umount /&amp;lt;mountpoint&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后可以移除逻辑卷了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvremove &amp;lt;volume_group&amp;gt;/&amp;lt;logical_volume&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后请不要忘记更新/etc/fstab。&lt;/p&gt;

&lt;p&gt;以上就是LVM调整相关组件大小的操作。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LVM管理磁盘的基本用法</title>
      <link>http://aphuse.github.io/post/howtouselvm/</link>
      <pubDate>Thu, 17 Dec 2015 14:59:54 &#43;0800</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/howtouselvm/</guid>
      <description>

&lt;p&gt;&amp;emsp;&amp;emsp;LVM 是一种可用在Linux内核的逻辑分卷管理器；可用于管理磁盘驱动器或其他类似的大容量存储设备。&lt;/p&gt;

&lt;h3 id=&#34;lvm基本组成:af1bbb589008466bddc7b41bcb20b678&#34;&gt;LVM基本组成&lt;/h3&gt;

&lt;p&gt;LVM利用Linux内核的device-mapper来实现存储系统的虚拟化。通过LVM可以实现存储空间的抽象化，并在上面建立虚拟分区，可以很简便的扩大和缩小分区大小，可以在增加或者删除分区操作时无需担心某个硬盘上没有足够的连续空间。LVM是用来方便管理的，不会提供额外的安全保证。&lt;/p&gt;

&lt;p&gt;LVM的基本组成：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;物理卷Physical volume (PV)：可以在上面建立卷组的媒介，可以是硬盘分区，也可以是硬盘本身或者回环文件。&lt;/li&gt;
&lt;li&gt;卷组Volume group (VG)：将一组物理卷收集为一个管理单元。&lt;/li&gt;
&lt;li&gt;逻辑卷Logical volume (LV)：虚拟分区，由物理区域(physical extents)组成。&lt;/li&gt;
&lt;li&gt;物理区域Physical extent (PE)：硬盘可提供指派给逻辑卷的最小单位（通常为4MB）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;优点:af1bbb589008466bddc7b41bcb20b678&#34;&gt;优点&lt;/h4&gt;

&lt;p&gt;比起正常的磁盘分区管理，LVM更富有弹性：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用卷组(VG)，使众多磁盘空间看起来像一个大磁盘。&lt;/li&gt;
&lt;li&gt;使用逻辑卷(LV)，可以创建跨越众多磁盘空间的分区。&lt;/li&gt;
&lt;li&gt;可以创建小的逻辑卷(LV)，在空间不足时再动态调整它的大小。&lt;/li&gt;
&lt;li&gt;在调整逻辑卷(LV)大小时可以不用考虑逻辑卷在磁盘上的位置，不用担心没有可用的连续空间。&lt;/li&gt;
&lt;li&gt;可以在线对逻辑卷(LV)和卷组(VG)进行创建、删除、调整大小等操作。&lt;/li&gt;
&lt;li&gt;无需重新启动服务，就可以将服务中用到的逻辑卷(LV)在线或动态迁移到别的磁盘上。&lt;/li&gt;
&lt;li&gt;允许创建快照，可以保存文件系统的备份，提高数据恢复的速度。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;缺点:af1bbb589008466bddc7b41bcb20b678&#34;&gt;缺点&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在系统设置时需要更复杂的额外步骤。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;创建物理卷-pv:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建物理卷(PV)&lt;/h3&gt;

&lt;p&gt;注意：&lt;strong&gt;请确认您对正确的分区进行操作！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;您可以通过以下方式找到类型“Linux LVM”的分区（这是您在分区的时候就设定好的，“Linux LVM”分区码对应的十六进制码为8e(MBR)或8e00(GPT)） ：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MBR格式：fdisk -l&lt;/li&gt;
&lt;li&gt;GPT格式：先用命令lsblk，再用命令gdisk -l disk-device&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在该分区（假设是/dev/sda2）下创建一个物理卷(PV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvcreate /dev/sda2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看创建好的物理卷(PV)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvdisplay
pvs
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建卷组-vg:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建卷组(VG)&lt;/h3&gt;

&lt;p&gt;创建完物理卷(PV)之后，我们就可以开始创建卷组(VG)了。如果您有两个以上的物理卷(PV)（例如：/dev/sda2和/dev/sdb1），并且您希望只使用一个卷组(VG)来管理这些物理卷(PV)，那么您首先要在其中一个物理卷(PV)上创建一个卷组(VG)，然后再让该卷组(VG)扩大到其他所有的物理卷(PV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vgcreate datavg /dev/sda2
vgextend datavg /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的命令中，datavg是您取得卷组名称，您可以换成您喜欢的名称。&lt;/p&gt;

&lt;p&gt;查看卷组信息命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vgdisplay
vgs
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建逻辑卷-lv:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建逻辑卷(LV)&lt;/h3&gt;

&lt;p&gt;创建完卷组(VG)之后，我们就可以开始创建逻辑卷(LV)了。下面是在datavg卷组(VG)上创建一个名为datalv大小为10G的逻辑卷(LV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvcreate -L 10G datavg -n datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果要创建的是swap分区，那么需要加上-C y参数，该参数用来指定逻辑卷的空间分配是连续的，保证您所创建的swap空间不会被分散在不连续的物理空间甚至不同的硬盘中。如在datavg卷组(VG)上创建10G大小名为swaplv的逻辑卷(LV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvcreate -C y -L 10G datavg -n swaplv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果您想要让创建的逻辑卷(LV)拥有卷组(VG)的所有未使用的空间，可以使用下面命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvcreate -l +100%FREE datavg -n datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看逻辑卷(LV)信息&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvdisplay
lvs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在您新建的逻辑卷应该已经在/dev/mapper和/dev/rootvg中了。如果您无法在以上位置找到它，请使用一下命令来加载模块，并扫描与激活卷组：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;modprobe dm-mod
vgscan
vgchange -ay
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建文件系统-file-system-和挂载逻辑卷-lv:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建文件系统(File system)和挂载逻辑卷(LV)&lt;/h3&gt;

&lt;p&gt;现在您可以在逻辑卷(LV)上创建文件系统并像普通分区一样挂载它了。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkfs.ext4 /dev/mapper/rootvg-datalv
mount /dev/mapper/rootvg-datalv /data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上就是LVM的基本使用介绍。后面还会介绍如何调整逻辑卷(LV)的大小。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DB2数据库客户端配置连接</title>
      <link>http://aphuse.github.io/post/db2afterinstall/</link>
      <pubDate>Mon, 07 Dec 2015 14:59:54 &#43;0800</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/db2afterinstall/</guid>
      <description>

&lt;p&gt;&amp;emsp;&amp;emsp;安装好DB2数据库之后，如果想要进行客户端的连接，首先要在服务端做一些配置，才能顺利连接得上数据库服务。下面我们来介绍一下如何进行配置。&lt;/p&gt;

&lt;h4 id=&#34;系统环境:ec00439a9b3e82ad3dcdaa65ddc1d682&#34;&gt;系统环境&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;操作系统：linux/unix&lt;/li&gt;
&lt;li&gt;DB2: v9.5&lt;/li&gt;
&lt;li&gt;DB2实例名：db2&lt;/li&gt;
&lt;li&gt;DB2服务器IP： 192.168.10.203&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;服务端配置:ec00439a9b3e82ad3dcdaa65ddc1d682&#34;&gt;服务端配置&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看一下服务名&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 get dbm cfg |grep SVC
TCP/IP Service name                          (SVCENAME) = DB2_db2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置指定实例的服务名&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 update dbm cfg using SVCENAME DB2_db2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看设置是否生效&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 get dbm cfg |grep SVC
TCP/IP Service name                          (SVCENAME) = DB2_db2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改/etc/services文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cat /etc/services|grep DB2_db2
DB2_db2         50000/tcp
DB2_db2_1       50001/tcp
DB2_db2_2       50002/tcp
DB2_db2_END     50003/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置通讯协议为tcpip&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2set DB2COMM=tcpip
$ db2set
DB2COMM=TCPIP
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重启db2实例，就可以进行客户端设置连接了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2stop
$ db2start
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;客户端配置:ec00439a9b3e82ad3dcdaa65ddc1d682&#34;&gt;客户端配置&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;建节点目录&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 catalog TCPIP node n1 remote 192.168.10.203 server 50000
$ db2 terminate
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;建数据库编目&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 catalog database demo as demo_as at node n1 authentication server
$ db2 terminate
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;连接数据库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 connect to demo_as user db2 using passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;删除数据库编码和节点命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 uncatalog db demo_as
$ db2 uncatalog node n1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看节点信息&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 list node directory
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>centos6.7下架设DNS服务</title>
      <link>http://aphuse.github.io/post/dnsInstall/</link>
      <pubDate>Tue, 01 Dec 2015 15:24:43 -1800</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/dnsInstall/</guid>
      <description>

&lt;h4 id=&#34;系统环境:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;系统环境&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;系统发行版：CentOS release 6.7 (Final)&lt;/li&gt;
&lt;li&gt;内核版本：GNU/Linux 2.6.32-573.8.1.el6.x86_64&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;安装bind:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;安装bind&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yum install bind bind-chroot bind-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;配置bind:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;配置bind&lt;/h4&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;相关配置文件可以参考/usr/share/doc/bind-*/sample/里面的示例配置文件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;编辑/etc/named.conf文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;//file:/etc/named.conf
acl corpnets {192.168.0.0/16;}; // 授权核心网络
options {
	listen-on port 53 { any; };
	listen-on-v6 port 53 { ::1; };
	directory 	&amp;quot;/var/named&amp;quot;;
	dump-file 	&amp;quot;/var/named/data/cache_dump.db&amp;quot;;
        statistics-file &amp;quot;/var/named/data/named_stats.txt&amp;quot;;
        memstatistics-file &amp;quot;/var/named/data/named_mem_stats.txt&amp;quot;;
	allow-query     { corpnets; };
	allow-query-cache { corpnets; };
	recursion yes;
	forwarders { 114.114.114.114; };
	dnssec-enable yes;
	dnssec-validation no;
	dnssec-lookaside auto;
	/* Path to ISC DLV key */
	bindkeys-file &amp;quot;/etc/named.iscdlv.key&amp;quot;;
	managed-keys-directory &amp;quot;/var/named/dynamic&amp;quot;;
};
//日志配置
logging {
        channel default_debug {
                file &amp;quot;data/named.run&amp;quot;;
                severity warning;
        };
};
// 使用view，所有的zone都要配置在view中
view nets192 {
	match-clients 	   { corpnets;};
	match-destinations { any; };
	recursion yes;

	zone &amp;quot;.&amp;quot; IN {
        	type hint;
        	file &amp;quot;named.ca&amp;quot;;
	};
	include &amp;quot;/etc/named.rfc1912.zones&amp;quot;;
};

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编辑/etc/named.rfc1912.zones文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;//file:/etc/named.rfc1912.zones
//配置本地域名解析，此配置在运行named服务后会自动生成，可以不用修改
zone &amp;quot;localhost.localdomain&amp;quot; IN {
	type master;
	file &amp;quot;named.localhost&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;localhost&amp;quot; IN {
	type master;
	file &amp;quot;named.localhost&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa&amp;quot; IN {
	type master;
	file &amp;quot;named.loopback&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;1.0.0.127.in-addr.arpa&amp;quot; IN {
	type master;
	file &amp;quot;named.loopback&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;0.in-addr.arpa&amp;quot; IN {
	type master;
	file &amp;quot;named.empty&amp;quot;;
	allow-update { none; };
};
//配置域名正向解析和反向解析，这里的配置需要自己手动添加
zone &amp;quot;test.cn&amp;quot; IN {
	type master;
	file &amp;quot;192.test.cn.zone&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;1.168.192.in-addr.arpa&amp;quot; IN {
        type master;
        file &amp;quot;192.test.cn.local&amp;quot;;
        allow-update { none; };
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编辑文件/var/named/192.test.cn.zone&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;;file:/var/named/192.test.cn.zone
;test.cn
$TTL	3600
@ IN  SOA localhost root (
					201512011402 ; serial (d. adams)
					3H           ; refresh
					15M          ; retry
					1W           ; expiry
					1D )         ; minimum
      IN NS   localhost.
@     IN A    192.168.1.224
dns   IN A    192.168.1.224
www   IN A    192.168.1.4
ftp   IN A    192.168.1.5

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编辑文件/var/named/192.test.cn.local&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;;file:/var/named/192.test.cn.local
;test.cn
$TTL	3600
@ IN  SOA  localhost. root.localhost.  (
           201512011402 ; Serial
           1M           ; Refresh
           15M          ; Retry
           1W           ; Expire
           1h )         ; Minimum
        IN      NS      localhost.
224     IN      PTR     dns.test.cn.
4       IN      PTR     www.test.cn.
5       IN      PTR     ftp.test.cn.

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;开放named服务端口:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;开放named服务端口&lt;/h4&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;named服务使用的端口号是53，配置防火墙开放53端口。执行下面代码打开53端口并保存设定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;iptable -A INPUT -m state --state NEW -m tcp -p tcp --dport 53 -j ACCEPT
iptable -A INPUT -m state --state NEW -m udp -p udp --dport 53 -j ACCEPT
iptables-save
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;启动named服务-测试:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;启动named服务,测试&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;启动服务&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;service named start
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dig @192.168.1.224 www.test.cn
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;配置named服务开机启动:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;配置named服务开机启动&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;chkconfig named on
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;问题及解决方案:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;问题及解决方案&lt;/h4&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;问题一:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;问题一&lt;/h5&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;error (network unreachable) resolving &amp;lsquo;www.linuser.com.dlv.isc.org/DLV/IN&amp;rsquo;: 2001:502:ad09::23#53
类似这样的报错是由于开启了IPv6，关闭dns IPv6即可。&lt;/p&gt;

&lt;h6 id=&#34;解决方法:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;解决方法&lt;/h6&gt;

&lt;p&gt;1) 在文件/etc/sysconfig/named后面添加一行&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  OPTIONS=&amp;quot;-4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2) 在/etc/named.conf中注释掉下面的内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  options {
        listen-on port 53 { any; };
        // listen-on-v6 port 53 { ::1; };

        ......
  }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
