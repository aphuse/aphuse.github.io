<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on aphuse blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://aphuse.github.io/</link>
    <language>zh-cn</language>
    <author>aphuse</author>
    
    <updated>Thu, 17 Dec 2015 14:59:54 CST</updated>
    
    <item>
      <title>LVM管理磁盘的基本用法</title>
      <link>http://aphuse.github.io/post/howtouselvm/</link>
      <pubDate>Thu, 17 Dec 2015 14:59:54 CST</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/howtouselvm/</guid>
      <description>

&lt;p&gt;&amp;emsp;&amp;emsp;LVM 是一种可用在Linux内核的逻辑分卷管理器；可用于管理磁盘驱动器或其他类似的大容量存储设备。&lt;/p&gt;

&lt;h3 id=&#34;lvm基本组成:af1bbb589008466bddc7b41bcb20b678&#34;&gt;LVM基本组成&lt;/h3&gt;

&lt;p&gt;LVM利用Linux内核的device-mapper来实现存储系统的虚拟化。通过LVM可以实现存储空间的抽象化，并在上面建立虚拟分区，可以很简便的扩大和缩小分区大小，可以在增加或者删除分区操作时无需担心某个硬盘上没有足够的连续空间。LVM是用来方便管理的，不会提供额外的安全保证。&lt;/p&gt;

&lt;p&gt;LVM的基本组成：
- 物理卷Physical volume (PV)：可以在上面建立卷组的媒介，可以是硬盘分区，也可以是硬盘本身或者回环文件。
- 卷组Volume group (VG)：将一组物理卷收集为一个管理单元。
- 逻辑卷Logical volume (LV)：虚拟分区，由物理区域(physical extents)组成。
- 物理区域Physical extent (PE)：硬盘可提供指派给逻辑卷的最小单位（通常为4MB）。&lt;/p&gt;

&lt;h4 id=&#34;优点:af1bbb589008466bddc7b41bcb20b678&#34;&gt;优点&lt;/h4&gt;

&lt;p&gt;比起正常的磁盘分区管理，LVM更富有弹性：
- 使用卷组(VG)，使众多磁盘空间看起来像一个大磁盘。
- 使用逻辑卷(LV)，可以创建跨越众多磁盘空间的分区。
- 可以创建小的逻辑卷(LV)，在空间不足时再动态调整它的大小。
- 在调整逻辑卷(LV)大小时可以不用考虑逻辑卷在磁盘上的位置，不用担心没有可用的连续空间。
- 可以在线对逻辑卷(LV)和卷组(VG)进行创建、删除、调整大小等操作。
- 无需重新启动服务，就可以将服务中用到的逻辑卷(LV)在线或动态迁移到别的磁盘上。
- 允许创建快照，可以保存文件系统的备份，提高数据恢复的速度。&lt;/p&gt;

&lt;h4 id=&#34;缺点:af1bbb589008466bddc7b41bcb20b678&#34;&gt;缺点&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在系统设置时需要更复杂的额外步骤。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;创建物理卷-pv:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建物理卷(PV)&lt;/h3&gt;

&lt;p&gt;注意：&lt;strong&gt;请确认您对正确的分区进行操作！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;您可以通过以下方式找到类型“Linux LVM”的分区（这是您在分区的时候就设定好的，“Linux LVM”分区码对应的十六进制码为8e(MBR)或8e00(GPT)） ：
- MBR格式：fdisk -l
- GPT格式：先用命令lsblk，再用命令gdisk -l disk-device&lt;/p&gt;

&lt;p&gt;在该分区（假设是/dev/sda2）下创建一个物理卷(PV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvcreate /dev/sda2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看创建好的物理卷(PV)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pvdisplay
pvs
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建卷组-vg:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建卷组(VG)&lt;/h3&gt;

&lt;p&gt;创建完物理卷(PV)之后，我们就可以开始创建卷组(VG)了。如果您有两个以上的物理卷(PV)（例如：/dev/sda2和/dev/sdb1），并且您希望只使用一个卷组(VG)来管理这些物理卷(PV)，那么您首先要在其中一个物理卷(PV)上创建一个卷组(VG)，然后再让该卷组(VG)扩大到其他所有的物理卷(PV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vgcreate datavg /dev/sda2
vgextend datavg /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的命令中，datavg是您取得卷组名称，您可以换成您喜欢的名称。&lt;/p&gt;

&lt;p&gt;查看卷组信息命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vgdisplay
vgs
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建逻辑卷-lv:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建逻辑卷(LV)&lt;/h3&gt;

&lt;p&gt;创建完卷组(VG)之后，我们就可以开始创建逻辑卷(LV)了。下面是在datavg卷组(VG)上创建一个名为datalv大小为10G的逻辑卷(LV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvcreate -L 10G datavg -n datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果要创建的是swap分区，那么需要加上-C y参数，该参数用来指定逻辑卷的空间分配是连续的，保证您所创建的swap空间不会被分散在不连续的物理空间甚至不同的硬盘中。如在datavg卷组(VG)上创建10G大小名为swaplv的逻辑卷(LV)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvcreate -C y -L 10G datavg -n swaplv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果您想要让创建的逻辑卷(LV)拥有卷组(VG)的所有未使用的空间，可以使用下面命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvcreate -l +100%FREE datavg -n datalv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看逻辑卷(LV)信息&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;lvdisplay
lvs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在您新建的逻辑卷应该已经在/dev/mapper和/dev/rootvg中了。如果您无法在以上位置找到它，请使用一下命令来加载模块，并扫描与激活卷组：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;modprobe dm-mod
vgscan
vgchange -ay
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建文件系统-file-system-和挂载逻辑卷-lv:af1bbb589008466bddc7b41bcb20b678&#34;&gt;创建文件系统(File system)和挂载逻辑卷(LV)&lt;/h3&gt;

&lt;p&gt;现在您可以在逻辑卷(LV)上创建文件系统并像普通分区一样挂载它了。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkfs.ext4 /dev/mapper/rootvg-datalv
mount /dev/mapper/rootvg-datalv /data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上就是LVM的基本使用介绍。后面还会介绍如何调整逻辑卷(LV)的大小。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DB2数据库客户端配置连接</title>
      <link>http://aphuse.github.io/post/db2afterinstall/</link>
      <pubDate>Mon, 07 Dec 2015 14:59:54 CST</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/db2afterinstall/</guid>
      <description>

&lt;p&gt;&amp;emsp;&amp;emsp;安装好DB2数据库之后，如果想要进行客户端的连接，首先要在服务端做一些配置，才能顺利连接得上数据库服务。下面我们来介绍一下如何进行配置。&lt;/p&gt;

&lt;h4 id=&#34;系统环境:ec00439a9b3e82ad3dcdaa65ddc1d682&#34;&gt;系统环境&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;操作系统：linux/unix&lt;/li&gt;
&lt;li&gt;DB2: v9.5&lt;/li&gt;
&lt;li&gt;DB2实例名：db2&lt;/li&gt;
&lt;li&gt;DB2服务器IP： 192.168.10.203&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;服务端配置:ec00439a9b3e82ad3dcdaa65ddc1d682&#34;&gt;服务端配置&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看一下服务名&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 get dbm cfg |grep SVC
TCP/IP Service name                          (SVCENAME) = DB2_db2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置指定实例的服务名&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 update dbm cfg using SVCENAME DB2_db2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看设置是否生效&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 get dbm cfg |grep SVC
TCP/IP Service name                          (SVCENAME) = DB2_db2
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改/etc/services文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cat /etc/services|grep DB2_db2
DB2_db2         50000/tcp
DB2_db2_1       50001/tcp
DB2_db2_2       50002/tcp
DB2_db2_END     50003/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置通讯协议为tcpip&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2set DB2COMM=tcpip
$ db2set
DB2COMM=TCPIP
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重启db2实例，就可以进行客户端设置连接了&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2stop
$ db2start
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;客户端配置:ec00439a9b3e82ad3dcdaa65ddc1d682&#34;&gt;客户端配置&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;建节点目录&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 catalog TCPIP node n1 remote 192.168.10.203 server 50000
$ db2 terminate
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;建数据库编目&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 catalog database demo as demo_as at node n1 authentication server
$ db2 terminate
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;连接数据库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 connect to demo_as user db2 using passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;删除数据库编码和节点命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 uncatalog db demo_as
$ db2 uncatalog node n1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看节点信息&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ db2 list node directory
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>centos6.7下架设DNS服务</title>
      <link>http://aphuse.github.io/post/dnsInstall/</link>
      <pubDate>Tue, 01 Dec 2015 15:24:43 -1800</pubDate>
      <author>aphuse</author>
      <guid>http://aphuse.github.io/post/dnsInstall/</guid>
      <description>

&lt;h4 id=&#34;系统环境:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;系统环境&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;系统发行版：CentOS release 6.7 (Final)&lt;/li&gt;
&lt;li&gt;内核版本：GNU/Linux 2.6.32-573.8.1.el6.x86_64&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;安装bind:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;安装bind&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yum install bind bind-chroot bind-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;配置bind:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;配置bind&lt;/h4&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;相关配置文件可以参考/usr/share/doc/bind-*/sample/里面的示例配置文件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;编辑/etc/named.conf文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;//file:/etc/named.conf
acl corpnets {192.168.0.0/16;}; // 授权核心网络
options {
	listen-on port 53 { any; };
	listen-on-v6 port 53 { ::1; };
	directory 	&amp;quot;/var/named&amp;quot;;
	dump-file 	&amp;quot;/var/named/data/cache_dump.db&amp;quot;;
        statistics-file &amp;quot;/var/named/data/named_stats.txt&amp;quot;;
        memstatistics-file &amp;quot;/var/named/data/named_mem_stats.txt&amp;quot;;
	allow-query     { corpnets; };
	allow-query-cache { corpnets; };
	recursion yes;
	forwarders { 114.114.114.114; };
	dnssec-enable yes;
	dnssec-validation no;
	dnssec-lookaside auto;
	/* Path to ISC DLV key */
	bindkeys-file &amp;quot;/etc/named.iscdlv.key&amp;quot;;
	managed-keys-directory &amp;quot;/var/named/dynamic&amp;quot;;
};
//日志配置
logging {
        channel default_debug {
                file &amp;quot;data/named.run&amp;quot;;
                severity warning;
        };
};
// 使用view，所有的zone都要配置在view中
view nets192 {
	match-clients 	   { corpnets;};
	match-destinations { any; };
	recursion yes;

	zone &amp;quot;.&amp;quot; IN {
        	type hint;
        	file &amp;quot;named.ca&amp;quot;;
	};
	include &amp;quot;/etc/named.rfc1912.zones&amp;quot;;
};

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编辑/etc/named.rfc1912.zones文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;//file:/etc/named.rfc1912.zones
//配置本地域名解析，此配置在运行named服务后会自动生成，可以不用修改
zone &amp;quot;localhost.localdomain&amp;quot; IN {
	type master;
	file &amp;quot;named.localhost&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;localhost&amp;quot; IN {
	type master;
	file &amp;quot;named.localhost&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa&amp;quot; IN {
	type master;
	file &amp;quot;named.loopback&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;1.0.0.127.in-addr.arpa&amp;quot; IN {
	type master;
	file &amp;quot;named.loopback&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;0.in-addr.arpa&amp;quot; IN {
	type master;
	file &amp;quot;named.empty&amp;quot;;
	allow-update { none; };
};
//配置域名正向解析和反向解析，这里的配置需要自己手动添加
zone &amp;quot;test.cn&amp;quot; IN {
	type master;
	file &amp;quot;192.test.cn.zone&amp;quot;;
	allow-update { none; };
};
zone &amp;quot;1.168.192.in-addr.arpa&amp;quot; IN {
        type master;
        file &amp;quot;192.test.cn.local&amp;quot;;
        allow-update { none; };
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编辑文件/var/named/192.test.cn.zone&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;;file:/var/named/192.test.cn.zone
;test.cn
$TTL	3600
@ IN  SOA localhost root (
					201512011402 ; serial (d. adams)
					3H           ; refresh
					15M          ; retry
					1W           ; expiry
					1D )         ; minimum
      IN NS   localhost.
@     IN A    192.168.1.224
dns   IN A    192.168.1.224
www   IN A    192.168.1.4
ftp   IN A    192.168.1.5

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编辑文件/var/named/192.test.cn.local&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;;file:/var/named/192.test.cn.local
;test.cn
$TTL	3600
@ IN  SOA  localhost. root.localhost.  (
           201512011402 ; Serial
           1M           ; Refresh
           15M          ; Retry
           1W           ; Expire
           1h )         ; Minimum
        IN      NS      localhost.
224     IN      PTR     dns.test.cn.
4       IN      PTR     www.test.cn.
5       IN      PTR     ftp.test.cn.

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;开放named服务端口:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;开放named服务端口&lt;/h4&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;named服务使用的端口号是53，配置防火墙开放53端口。执行下面代码打开53端口并保存设定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;iptable -A INPUT -m state --state NEW -m tcp -p tcp --dport 53 -j ACCEPT
iptable -A INPUT -m state --state NEW -m udp -p udp --dport 53 -j ACCEPT
iptables-save
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;启动named服务-测试:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;启动named服务,测试&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;启动服务&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;service named start
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dig @192.168.1.224 www.test.cn
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;配置named服务开机启动:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;配置named服务开机启动&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;chkconfig named on
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;问题及解决方案:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;问题及解决方案&lt;/h4&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;问题一:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;问题一&lt;/h5&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;error (network unreachable) resolving &amp;lsquo;www.linuser.com.dlv.isc.org/DLV/IN&amp;rsquo;: 2001:502:ad09::23#53
类似这样的报错是由于开启了IPv6，关闭dns IPv6即可。&lt;/p&gt;

&lt;h6 id=&#34;解决方法:7438b85971e53fee7fb73afeb33bd2c4&#34;&gt;解决方法&lt;/h6&gt;

&lt;p&gt;1) 在文件/etc/sysconfig/named后面添加一行&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  OPTIONS=&amp;quot;-4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2) 在/etc/named.conf中注释掉下面的内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  options {
        listen-on port 53 { any; };
        // listen-on-v6 port 53 { ::1; };

        ......
  }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
